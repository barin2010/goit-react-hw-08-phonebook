{"version":3,"file":"static/js/729.54a7a7a6.chunk.js","mappings":"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","sources":["redux/contacts/contactSlice.selectors.js","webpack://react-homework-template/./src/components/contactForm/contactForm.module.css?5312","components/contactForm/contactForm.jsx","webpack://react-homework-template/./src/components/filter/filter.module.css?56b3","components/filter/filter.jsx","webpack://react-homework-template/./src/components/contacts/contacts.module.css?6b98","components/contacts/contacts.jsx","webpack://react-homework-template/./src/components/contactList/contactList.module.css?e2f8","components/contactList/contactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectContactsIsLoading = createSelector(\n    selectContacts,\n    contacts => contacts.isLoading\n);\nexport const selectContactsIsError = createSelector(\n    selectContacts,\n    contacts => contacts.error\n);\n\nexport const selectContactsItems = createSelector(\n    selectContacts,\n    contacts => contacts.items\n);\n\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectFilterValue = createSelector(\n    selectFilter,\n    filter => filter.filter\n)\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n      if (!Array.isArray(contacts)) {\n        contacts = [];\n    }\n    \n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase().trim())\n      );\n    }\n  );","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contactForm_container__Fi-5m\",\"contactForm\":\"contactForm_contactForm__d8dCw\",\"label\":\"contactForm_label__cLo1s\",\"contactInput\":\"contactForm_contactInput__8Occh\",\"addContactBttn\":\"contactForm_addContactBttn__bkeJN\"};","import React, { useState } from 'react';\nimport {selectContacts} from '../../redux/contacts/contactSlice.selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk} from '../../redux/contacts/contactsSlice.operations';\nimport Notiflix from 'notiflix';\nimport css from \"./contactForm.module.css\";\n\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n  const handleNameChange = (evt) => {\n    setName(evt.target.value);\n  };\n\n  const handleNumberChange = (evt) => {\n    setNumber(evt.target.value);\n    \n  };\n\n  const handleAddContact = (evt) => {\n    evt.preventDefault();\n\n\n    const formData = { name, number };\n\n    const hasDuplicates = contacts.some(\n      ({ name, number }) =>\n        name.toLowerCase() === formData.name.toLowerCase() || \n        number === formData.number\n    );\n    \n    if (hasDuplicates) {\n      return Notiflix.Notify.failure(`Contact ${formData.name} is already in contacts.`);\n      \n    }\n    const newContact = {\n      ...formData,\n    };\n    const action = addContactThunk(newContact);\n    dispatch(action);\n\n    setName('');\n    setNumber('');\n  };\n\n  \n  return (\n      <div className={css.container}>\n      <form className={css.contactForm} onSubmit={handleAddContact}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.contactInput}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          required\n          value={name}\n          onChange={handleNameChange}\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.contactInput}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          required\n          value={number}\n          onChange={handleNumberChange}\n        />\n      </label>\n      <button className={css.addContactBttn} type=\"submit\">\n        Add contact\n      </button>\n    </form></div>\n  );\n}\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"filter_filter__4JT9Y\",\"filterLabel\":\"filter_filterLabel__3HlzA\",\"filterInput\":\"filter_filterInput__Hvnfk\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport { selectFilterValue } from '../../redux/contacts/contactSlice.selectors'\n\nimport css from \"./filter.module.css\";\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilterValue);\n  \n\n  const handleFilterChange = (event) => {\n    const value = event.target.value;\n    const action = setFilter(value);\n    dispatch(action);\n  };\n\n  return (\n    <div className={css.filter}>\n    <label className={css.filterLabel}>\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n        value={value}\n        onChange={handleFilterChange}\n      />\n    </label></div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"contacts_contactItem__LpOfP\",\"contactText\":\"contacts_contactText__B8YYP\",\"contactName\":\"contacts_contactName__KCXmf\",\"deleteContactBttn\":\"contacts_deleteContactBttn__Bkkjo\"};","import React from 'react';\nimport {deleteContactThunk} from '../../redux/contacts/contactsSlice.operations';\nimport {useDispatch} from 'react-redux';\nimport css from \"./contacts.module.css\";\n\nexport const Contact = ({id, name, number}) => {\nconst dispatch = useDispatch();\n  const handleDeleteBtnClick = () => {\n    const action = deleteContactThunk(id);\n    dispatch(action);\n  };\n\n  return (\n  <li className={css.contactItem}>\n    <p className={css.contactText}>\n      <span className={css.contactName}>{name}:</span>\n      <span>{number}</span>\n    </p>\n    <button\n      className={css.deleteContactBttn}\n      type=\"button\"\n      onClick={handleDeleteBtnClick}\n    >\n      Delete\n    </button>\n  </li>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"contactList_contactList__PtxRa\"};","import React from 'react';\nimport { Contact } from \"components/contacts/contacts\";\nimport { selectFilteredContacts } from \"../../redux/contacts/contactSlice.selectors\";\nimport {  useSelector } from \"react-redux\";\nimport css from \"./contactList.module.css\";\n\nexport const ContactList = ({handleDeleteBtnClick}) => {\n  const filteredContacts = useSelector(selectFilteredContacts);\nreturn (\n  <ul className={css.contactList}>\n    { filteredContacts.map(({ name, number, id }) => (\n      <Contact \n        key={id}\n        id={id}\n        name={name}\n        number={number}\n        handleDeleteBtnClick={handleDeleteBtnClick}\n      />\n    ))}\n  </ul>)\n}","\nimport React, { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/contactsSlice.operations';\nimport { ContactForm } from 'components/contactForm/contactForm';\nimport { Filter } from 'components/filter/filter';\nimport { ContactList } from 'components/contactList/contactList';\n\n\n\n\n const ContactsPage = () => {\n  const dispatch = useDispatch();\n   \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch])\n\n    return (\n      <div >\n        <ContactForm />\n        <h2 style={{ textAlign: 'center', marginTop: '20px',color: '#1976D2' }}>Contacts</h2>\n        <Filter />\n        <ContactList/>\n      </div>\n    );\n  }\n\nexport default ContactsPage;"],"names":["selectContacts","state","contacts","selectFilter","createSelector","isLoading","error","items","filter","selectFilterValue","selectFilteredContacts","Array","isArray","_ref","name","toLowerCase","includes","trim","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","_jsx","className","css","children","_jsxs","onSubmit","evt","preventDefault","formData","hasDuplicates","some","Notiflix","concat","newContact","_objectSpread","action","addContactThunk","type","placeholder","required","value","onChange","target","Filter","event","setFilter","Contact","id","onClick","deleteContactThunk","ContactList","handleDeleteBtnClick","filteredContacts","map","_ref2","useEffect","fetchContacts","style","textAlign","marginTop","color"],"sourceRoot":""}